name: Build

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.401
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Install dependencies
      working-directory: ./src
      run: dotnet restore
    - run: echo "VERSION=${GITHUB_REF/refs\/tags\/release\//}" >> $GITHUB_ENV
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
    - run: echo "VERSION=0.1.0-local" >> $GITHUB_ENV
      if: ${{ !startsWith(github.ref, 'refs/tags/release/') }}
    - name: Build
      working-directory: ./src
      run: dotnet build --configuration Release -p:Version=${{ env.VERSION }} --no-restore
    - name: Test
      working-directory: ./src
      run: dotnet test --configuration Release --no-build --verbosity normal
    - name: Pack
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
      working-directory: ./src
      run: dotnet pack --configuration Release -p:Version=${{ env.VERSION }} --no-build
    - name: Push to NuGet.org
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
      working-directory: ./src
      run: |
        dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json

  docker:

    runs-on: ubuntu-latest

    needs: build

    steps:
    - uses: actions/checkout@v2
    - run: echo "VERSION=${GITHUB_REF/refs\/tags\/release\//}" >> $GITHUB_ENV
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
    - run: echo "VERSION=0.1.0-local" >> $GITHUB_ENV
      if: ${{ !startsWith(github.ref, 'refs/tags/release/') }}
    - uses: docker/build-push-action@v1
      with:
        build_args: VERSION=${{ env.VERSION }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        repository: centeredge/yardarm
        tag_with_ref: true
        tag_with_sha: true
        push: ${{ startsWith(github.ref, 'refs/tags/release/') }}
