name: Build

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - uses: actions/cache@v2
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
    - name: Install dependencies
      working-directory: ./src
      run: dotnet restore
    - run: echo "VERSION=${GITHUB_REF/refs\/tags\/release\//}" >> $GITHUB_ENV
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
    - run: echo "VERSION=0.1.0-local" >> $GITHUB_ENV
      if: ${{ !startsWith(github.ref, 'refs/tags/release/') }}
    - name: Build
      working-directory: ./src
      run: dotnet build --configuration Release -p:Version=${{ env.VERSION }} --no-restore
    - name: Test
      working-directory: ./src
      run: dotnet test --configuration Release --no-build --verbosity normal
    - name: Pack
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
      working-directory: ./src
      run: dotnet pack --configuration Release -p:Version=${{ env.VERSION }} --no-build
    - name: Push to NuGet.org
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
      working-directory: ./src
      run: |
        dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_API_KEY}} --source https://api.nuget.org/v3/index.json --skip-duplicate

  docker:

    runs-on: ubuntu-latest

    needs: build

    steps:
    - uses: actions/checkout@v2
    - run: echo "VERSION=${GITHUB_REF/refs\/tags\/release\//}" >> $GITHUB_ENV
      if: ${{ startsWith(github.ref, 'refs/tags/release/') }}
    - run: echo "VERSION=0.1.0-local" >> $GITHUB_ENV
      if: ${{ !startsWith(github.ref, 'refs/tags/release/') }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/centeredge/yardarm
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}},value=${{ env.VERSION }}
          type=sha

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/build-push-action@v2
      with:
        context: .
        build-args: VERSION=${{ env.VERSION }}
        push: ${{ startsWith(github.ref, 'refs/tags/release/') }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
